{
  "contractName": "IRecovery",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "enterRecoveryMode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exitRecoveryMode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "approveExitRecovery",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isInRecoveryMode",
      "outputs": [
        {
          "name": "inRecoveryMode",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "setRecoveryRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeRecoveryRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numRecoveryRoles",
      "outputs": [
        {
          "name": "numRoles",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_slot",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "bytes32"
        }
      ],
      "name": "setStorageSlotRecovery",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_slot",
          "type": "uint256"
        }
      ],
      "name": "checkNotAdditionalProtectedVariable",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"approveExitRecovery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exitRecoveryMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numRecoveryRoles\",\"outputs\":[{\"name\":\"numRoles\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_slot\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"setStorageSlotRecovery\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInRecoveryMode\",\"outputs\":[{\"name\":\"inRecoveryMode\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_slot\",\"type\":\"uint256\"}],\"name\":\"checkNotAdditionalProtectedVariable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeRecoveryRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"setRecoveryRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enterRecoveryMode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkNotAdditionalProtectedVariable(uint256)\":{\"details\":\"No return value, but should throw if protected.This is public, but is only expected to be called from ContractRecovery; no need toexpose this to any users.\",\"params\":{\"_slot\":\"The storage slot number to check.\"}},\"isInRecoveryMode()\":{\"return\":\"inRecoveryMode Return true if recovery mode is active, false otherwise\"},\"numRecoveryRoles()\":{\"return\":\"numRoles Number of users with the recovery role.\"},\"removeRecoveryRole(address)\":{\"params\":{\"_user\":\"User we want to remove recovery role from\"}},\"setRecoveryRole(address)\":{\"params\":{\"_user\":\"User we want to give a recovery role to\"}},\"setStorageSlotRecovery(uint256,bytes32)\":{\"details\":\"certain critical variables are protected from editing in this function\",\"params\":{\"_slot\":\"Uint address of storage slot to be updated\",\"_value\":\"word of data to be set\"}}},\"title\":\"Recovery interface\"},\"userdoc\":{\"methods\":{\"approveExitRecovery()\":{\"notice\":\"Indicate approval to exit recovery mode. Can only be called by user with recovery role.\"},\"checkNotAdditionalProtectedVariable(uint256)\":{\"notice\":\"Check whether the supplied slot is a protected variable specific to this contract\"},\"enterRecoveryMode()\":{\"notice\":\"Put colony network mining into recovery mode. Can only be called by user with recovery role.\"},\"exitRecoveryMode()\":{\"notice\":\"Exit recovery mode, can be called by anyone if enough whitelist approvals are given.\"},\"isInRecoveryMode()\":{\"notice\":\"Is colony network in recovery mode.\"},\"numRecoveryRoles()\":{\"notice\":\"Return number of recovery roles.\"},\"removeRecoveryRole(address)\":{\"notice\":\"Remove colony recovery role. Can only be called by root role.\"},\"setRecoveryRole(address)\":{\"notice\":\"Set new colony recovery role. Can be called by root.\"},\"setStorageSlotRecovery(uint256,bytes32)\":{\"notice\":\"Update value of arbitrary storage variable. Can only be called by user with recovery role.\"}},\"notice\":\"All publicly available functions are available here and registered to work with EtherRouter Network contract\"}},\"settings\":{\"compilationTarget\":{\"/Users/kronosapiens/code/colony/warsaw/les-contracts/contracts/lib/colony/IRecovery.sol\":\"IRecovery\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/kronosapiens/code/colony/warsaw/les-contracts/contracts/lib/colony/IRecovery.sol\":{\"keccak256\":\"0xe7b622479c9109ff647e665b2510c8288266aa0a08d1a560f06e967ea75b5513\",\"urls\":[\"bzzr://31f4323f2027cdc528c91c25d423055c53a618edf2f9624d7ed774abe8e6254b\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n  This file is part of The Colony Network.\n\n  The Colony Network is free software: you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation, either version 3 of the License, or\n  (at your option) any later version.\n\n  The Colony Network is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with The Colony Network. If not, see <http://www.gnu.org/licenses/>.\n*/\n\npragma solidity >=0.5.8; // ignore-swc-103\npragma experimental \"ABIEncoderV2\";\n\n\n/// @title Recovery interface\n/// @notice All publicly available functions are available here and registered to work with EtherRouter Network contract\ncontract IRecovery {\n  /// @notice Put colony network mining into recovery mode.\n  /// Can only be called by user with recovery role.\n  function enterRecoveryMode() public;\n\n  /// @notice Exit recovery mode, can be called by anyone if enough whitelist approvals are given.\n  function exitRecoveryMode() public;\n\n  /// @notice Indicate approval to exit recovery mode.\n  /// Can only be called by user with recovery role.\n  function approveExitRecovery() public;\n\n  /// @notice Is colony network in recovery mode.\n  /// @return inRecoveryMode Return true if recovery mode is active, false otherwise\n  function isInRecoveryMode() public view returns (bool inRecoveryMode);\n\n  /// @notice Set new colony recovery role.\n  /// Can be called by root.\n  /// @param _user User we want to give a recovery role to\n  function setRecoveryRole(address _user) public;\n\n  /// @notice Remove colony recovery role.\n  /// Can only be called by root role.\n  /// @param _user User we want to remove recovery role from\n  function removeRecoveryRole(address _user) public;\n\n  /// @notice Return number of recovery roles.\n  /// @return numRoles Number of users with the recovery role.\n  function numRecoveryRoles() public view returns(uint64 numRoles);\n\n  /// @notice Update value of arbitrary storage variable.\n  /// Can only be called by user with recovery role.\n  /// @param _slot Uint address of storage slot to be updated\n  /// @param _value word of data to be set\n  /// @dev certain critical variables are protected from editing in this function\n  function setStorageSlotRecovery(uint256 _slot, bytes32 _value) public;\n\n  /// @notice Check whether the supplied slot is a protected variable specific to this contract\n  /// @param _slot The storage slot number to check.\n  /// @dev No return value, but should throw if protected.\n  /// @dev This is public, but is only expected to be called from ContractRecovery; no need to\n  /// @dev expose this to any users.\n  function checkNotAdditionalProtectedVariable(uint256 _slot) public view;\n}\n",
  "sourcePath": "/Users/kronosapiens/code/colony/warsaw/les-contracts/contracts/lib/colony/IRecovery.sol",
  "ast": {
    "absolutePath": "/Users/kronosapiens/code/colony/warsaw/les-contracts/contracts/lib/colony/IRecovery.sol",
    "exportedSymbols": {
      "IRecovery": [
        2854
      ]
    },
    "id": 2855,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2811,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "700:24:9"
      },
      {
        "id": 2812,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "743:35:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Recovery interface\n @notice All publicly available functions are available here and registered to work with EtherRouter Network contract",
        "fullyImplemented": false,
        "id": 2854,
        "linearizedBaseContracts": [
          2854
        ],
        "name": "IRecovery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Put colony network mining into recovery mode.\n Can only be called by user with recovery role.",
            "id": 2815,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enterRecoveryMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1094:2:9"
            },
            "returnParameters": {
              "id": 2814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:0:9"
            },
            "scope": 2854,
            "src": "1068:36:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Exit recovery mode, can be called by anyone if enough whitelist approvals are given.",
            "id": 2818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exitRecoveryMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:2:9"
            },
            "returnParameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:0:9"
            },
            "scope": 2854,
            "src": "1207:35:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Indicate approval to exit recovery mode.\n Can only be called by user with recovery role.",
            "id": 2821,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveExitRecovery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:9"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:0:9"
            },
            "scope": 2854,
            "src": "1354:38:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Is colony network in recovery mode.\n @return inRecoveryMode Return true if recovery mode is active, false otherwise",
            "id": 2826,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isInRecoveryMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:2:9"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2824,
                  "name": "inRecoveryMode",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "1580:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:21:9"
            },
            "scope": 2854,
            "src": "1531:70:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Set new colony recovery role.\n Can be called by root.\n @param _user User we want to give a recovery role to",
            "id": 2831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRecoveryRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1762:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:15:9"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:9"
            },
            "scope": 2854,
            "src": "1737:47:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Remove colony recovery role.\n Can only be called by root role.\n @param _user User we want to remove recovery role from",
            "id": 2836,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeRecoveryRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2833,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "1959:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1958:15:9"
            },
            "returnParameters": {
              "id": 2835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:9"
            },
            "scope": 2854,
            "src": "1931:50:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Return number of recovery roles.\n @return numRoles Number of users with the recovery role.",
            "id": 2841,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numRecoveryRoles",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2120:2:9"
            },
            "returnParameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2839,
                  "name": "numRoles",
                  "nodeType": "VariableDeclaration",
                  "scope": 2841,
                  "src": "2143:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2142:17:9"
            },
            "scope": 2854,
            "src": "2095:65:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Update value of arbitrary storage variable.\n Can only be called by user with recovery role.\n @param _slot Uint address of storage slot to be updated\n @param _value word of data to be set\n @dev certain critical variables are protected from editing in this function",
            "id": 2848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStorageSlotRecovery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2843,
                  "name": "_slot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "2494:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2845,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "2509:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2844,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2493:31:9"
            },
            "returnParameters": {
              "id": 2847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:0:9"
            },
            "scope": 2854,
            "src": "2462:70:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Check whether the supplied slot is a protected variable specific to this contract\n @param _slot The storage slot number to check.\n @dev No return value, but should throw if protected.\n @dev This is public, but is only expected to be called from ContractRecovery; no need to\n @dev expose this to any users.",
            "id": 2853,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkNotAdditionalProtectedVariable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2850,
                  "name": "_slot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2853,
                  "src": "2921:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2920:15:9"
            },
            "returnParameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2947:0:9"
            },
            "scope": 2854,
            "src": "2876:72:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2855,
        "src": "932:2018:9"
      }
    ],
    "src": "700:2251:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/kronosapiens/code/colony/warsaw/les-contracts/contracts/lib/colony/IRecovery.sol",
    "exportedSymbols": {
      "IRecovery": [
        2854
      ]
    },
    "id": 2855,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2811,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "700:24:9"
      },
      {
        "id": 2812,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "743:35:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Recovery interface\n @notice All publicly available functions are available here and registered to work with EtherRouter Network contract",
        "fullyImplemented": false,
        "id": 2854,
        "linearizedBaseContracts": [
          2854
        ],
        "name": "IRecovery",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Put colony network mining into recovery mode.\n Can only be called by user with recovery role.",
            "id": 2815,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enterRecoveryMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1094:2:9"
            },
            "returnParameters": {
              "id": 2814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:0:9"
            },
            "scope": 2854,
            "src": "1068:36:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Exit recovery mode, can be called by anyone if enough whitelist approvals are given.",
            "id": 2818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "exitRecoveryMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1232:2:9"
            },
            "returnParameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1241:0:9"
            },
            "scope": 2854,
            "src": "1207:35:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Indicate approval to exit recovery mode.\n Can only be called by user with recovery role.",
            "id": 2821,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveExitRecovery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:9"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:0:9"
            },
            "scope": 2854,
            "src": "1354:38:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Is colony network in recovery mode.\n @return inRecoveryMode Return true if recovery mode is active, false otherwise",
            "id": 2826,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isInRecoveryMode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:2:9"
            },
            "returnParameters": {
              "id": 2825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2824,
                  "name": "inRecoveryMode",
                  "nodeType": "VariableDeclaration",
                  "scope": 2826,
                  "src": "1580:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:21:9"
            },
            "scope": 2854,
            "src": "1531:70:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Set new colony recovery role.\n Can be called by root.\n @param _user User we want to give a recovery role to",
            "id": 2831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRecoveryRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2831,
                  "src": "1762:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1761:15:9"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:9"
            },
            "scope": 2854,
            "src": "1737:47:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Remove colony recovery role.\n Can only be called by root role.\n @param _user User we want to remove recovery role from",
            "id": 2836,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeRecoveryRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2833,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 2836,
                  "src": "1959:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1958:15:9"
            },
            "returnParameters": {
              "id": 2835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:9"
            },
            "scope": 2854,
            "src": "1931:50:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Return number of recovery roles.\n @return numRoles Number of users with the recovery role.",
            "id": 2841,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "numRecoveryRoles",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2120:2:9"
            },
            "returnParameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2839,
                  "name": "numRoles",
                  "nodeType": "VariableDeclaration",
                  "scope": 2841,
                  "src": "2143:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2142:17:9"
            },
            "scope": 2854,
            "src": "2095:65:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Update value of arbitrary storage variable.\n Can only be called by user with recovery role.\n @param _slot Uint address of storage slot to be updated\n @param _value word of data to be set\n @dev certain critical variables are protected from editing in this function",
            "id": 2848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStorageSlotRecovery",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2843,
                  "name": "_slot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "2494:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2845,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "2509:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2844,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2509:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2493:31:9"
            },
            "returnParameters": {
              "id": 2847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:0:9"
            },
            "scope": 2854,
            "src": "2462:70:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@notice Check whether the supplied slot is a protected variable specific to this contract\n @param _slot The storage slot number to check.\n @dev No return value, but should throw if protected.\n @dev This is public, but is only expected to be called from ContractRecovery; no need to\n @dev expose this to any users.",
            "id": 2853,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkNotAdditionalProtectedVariable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2850,
                  "name": "_slot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2853,
                  "src": "2921:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2921:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2920:15:9"
            },
            "returnParameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2947:0:9"
            },
            "scope": 2854,
            "src": "2876:72:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2855,
        "src": "932:2018:9"
      }
    ],
    "src": "700:2251:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.0.13",
  "updatedAt": "2019-08-25T02:14:18.816Z",
  "devdoc": {
    "methods": {
      "checkNotAdditionalProtectedVariable(uint256)": {
        "details": "No return value, but should throw if protected.This is public, but is only expected to be called from ContractRecovery; no need toexpose this to any users.",
        "params": {
          "_slot": "The storage slot number to check."
        }
      },
      "isInRecoveryMode()": {
        "return": "inRecoveryMode Return true if recovery mode is active, false otherwise"
      },
      "numRecoveryRoles()": {
        "return": "numRoles Number of users with the recovery role."
      },
      "removeRecoveryRole(address)": {
        "params": {
          "_user": "User we want to remove recovery role from"
        }
      },
      "setRecoveryRole(address)": {
        "params": {
          "_user": "User we want to give a recovery role to"
        }
      },
      "setStorageSlotRecovery(uint256,bytes32)": {
        "details": "certain critical variables are protected from editing in this function",
        "params": {
          "_slot": "Uint address of storage slot to be updated",
          "_value": "word of data to be set"
        }
      }
    },
    "title": "Recovery interface"
  },
  "userdoc": {
    "methods": {
      "approveExitRecovery()": {
        "notice": "Indicate approval to exit recovery mode. Can only be called by user with recovery role."
      },
      "checkNotAdditionalProtectedVariable(uint256)": {
        "notice": "Check whether the supplied slot is a protected variable specific to this contract"
      },
      "enterRecoveryMode()": {
        "notice": "Put colony network mining into recovery mode. Can only be called by user with recovery role."
      },
      "exitRecoveryMode()": {
        "notice": "Exit recovery mode, can be called by anyone if enough whitelist approvals are given."
      },
      "isInRecoveryMode()": {
        "notice": "Is colony network in recovery mode."
      },
      "numRecoveryRoles()": {
        "notice": "Return number of recovery roles."
      },
      "removeRecoveryRole(address)": {
        "notice": "Remove colony recovery role. Can only be called by root role."
      },
      "setRecoveryRole(address)": {
        "notice": "Set new colony recovery role. Can be called by root."
      },
      "setStorageSlotRecovery(uint256,bytes32)": {
        "notice": "Update value of arbitrary storage variable. Can only be called by user with recovery role."
      }
    },
    "notice": "All publicly available functions are available here and registered to work with EtherRouter Network contract"
  }
}